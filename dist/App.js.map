{"version":3,"sources":["App.js"],"names":[],"mappings":";;;;;;;;;;;;;;qBAAkB,SAAS;;;;wBACN,YAAY;;;;sBACnB,QAAQ;;;;;AAGtB,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAA;;IAE9C,GAAG;AACK,WADR,GAAG,CACM,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE;0BAD9B,GAAG;;;AAGL,QAAI,CAAC,SAAS,GAAG,EAAE,CAAA;AACnB,QAAI,CAAC,MAAM,GAAG,EAAE,CAAA;AAChB,QAAI,CAAC,WAAW,GAAG,EAAE,CAAA;;AAErB,QAAI,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE;AACpB,UAAI,CAAC,SAAS,CAAC,EAAE,GAAG,uBAAuB,CAAA;AAC3C,UAAI,CAAC,SAAS,CAAC,OAAO,GAAG,uBAAuB,CAAA;AAChD,UAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AAC/B,SAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAA;OAC7B,CAAC,CAAA;;;AAGF,aAAM;KACP;;AAED,QAAI,IAAI,GAAG,IAAI,CAAA;AACf,0BAAS,UAAU,CAAC,EAAC,KAAK,EAAL,KAAK,EAAE,MAAM,EAAN,MAAM,EAAC,CAAC,CACjC,IAAI,CAAC,UAAU,GAAG,EAAE;AACnB,UAAI,CAAC,SAAS,GAAG,oBAAE,SAAS,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAA,EAAE;eAAI,SAAS,GAAG,EAAE;OAAA,CAAC,CAAA;AAChE,UAAI,CAAC,SAAS,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG,OAAO,CAAA;;AAE/C,UAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AAC/B,SAAC,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAA;OAC7B,CAAC,CAAA;KACH,CAAC,SACI,CAAC,UAAU,GAAG,EAAE;AACpB,WAAK,CAAC,qCAAqC,EAAE,GAAG,CAAC,CAAA;KAClD,CAAC,CAAA;GACL;;eA/BG,GAAG;;WAiCD,eAAC,SAAS,EAAE;AAChB,UAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE;AAC9B,eAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAA;AAC5C,eAAO,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAA;OACnC;;AAED,UAAI,KAAK,GAAG,uBAAU;AACpB,iBAAS,EAAE,IAAI,CAAC,SAAS;AACzB,aAAK,EAAE,EAAC,IAAI,EAAE,SAAS,EAAC;OACzB,CAAC,CAAA;;AAEF,UAAI,aAAY,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;AAC1C,aAAK,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,CAAA;OACjC;;AAED,UAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,KAAK,CAAA;AACnC,UAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;AACvB,aAAO,KAAK,CAAA;KACb;;;SAnDG,GAAG;;;qBAuDM,GAAG","file":"App.js","sourcesContent":["import Table from './Table'\nimport services from './services'\nimport _ from 'lodash'\n\n// var log = console.log.bind(console, '[App]')\nvar error = console.error.bind(console, '[sdk/App]')\n\nclass App {\n  constructor (appID, secret, opts) {\n    // properties\n    this.endpoints = {}\n    this.tables = []\n    this.tablesCache = {}\n\n    if (opts && opts.dev) {\n      this.endpoints.rp = 'http://localhost:3001'\n      this.endpoints.phineas = 'http://localhost:3000'\n      this.tables.forEach(function (t) {\n        t.emit('ep', this.endpoints)\n      })\n\n      // log('[dev:true] endpoints', this.endpoints)\n      return\n    }\n\n    var self = this\n    services.initialize({appID, secret})\n      .then(function (res) {\n        self.endpoints = _.mapValues(res.services, ep => 'http://' + ep)\n        self.endpoints.rp = self.endpoints.rp + ':3001'\n\n        self.tables.forEach(function (t) {\n          t.emit('ep', self.endpoints)\n        })\n      })\n      .catch(function (err) {\n        error('Error trying to initialize services', err)\n      })\n  }\n\n  table (tableName) {\n    if(this.tablesCache[tableName]) {\n      console.log('return TABLE created instance')\n      return this.tablesCache[tableName]\n    }\n\n    var table = new Table({\n      endpoints: this.endpoints,\n      table: {name: tableName}\n    })\n\n    if (Object.keys(this.endpoints).length > 0) {\n      table.emit('ep', this.endpoints)\n    }\n\n    this.tablesCache[tableName] = table\n    this.tables.push(table)\n    return table\n  }\n\n}\n\nexport default App\n"],"sourceRoot":"/source/"}