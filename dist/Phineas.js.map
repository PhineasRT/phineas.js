{"version":3,"sources":["Phineas.js"],"names":[],"mappings":";;;;;;;;mBAAgB,OAAO;;;;0BACN,aAAa;;;;AAE9B,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;;AAEtB,IAAI,OAAO,GAAG;AACb,MAAI,EAAE,EAAE;;AAEP,YAAU,EAAE,oBAAU,IAAe,EAAE,IAAI,EAAE;QAAtB,KAAK,GAAN,IAAe,CAAd,KAAK;QAAE,MAAM,GAAd,IAAe,CAAP,MAAM;;AAClC,QAAM,CAAC,GAAG,6BAAK,EAAC,KAAK,EAAL,KAAK,EAAE,MAAM,EAAN,MAAM,EAAC,CAAC,CAAA;AAC/B,QAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;AACf,aAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAA;AACjC,aAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;KACpB,MAAM;AACL,aAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAA;;AAE3B,UAAI,GAAG,GAAG,qBAAQ,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,CAAA;AACtC,UAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA;AAClB,aAAO,GAAG,CAAA;KACX;GACF;CACF,CAAA;;qBAEc,OAAO","file":"Phineas.js","sourcesContent":["import App from './App'\nimport hash from 'object-hash'\n\nconsole.log('PHIENAS')\n\nvar Phineas = {\n\tapps: {},\n\n  initialize: function ({appID, secret}, opts) {\n    const h = hash({appID, secret})\n    if(this.apps[h]) {\n      console.log('returning instance')\n      return this.apps[h]\n    } else {\n      console.log('new instance')\n\n      var app = new App(appID, secret, opts)\n      this.apps[h] = app\n      return app\n    }\n  }\n}\n\nexport default Phineas\n"],"sourceRoot":"/source/"}