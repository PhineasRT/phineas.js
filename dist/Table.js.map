{"version":3,"sources":["Table.js"],"names":[],"mappings":"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","file":"Table.js","sourcesContent":["import EventEmitter from 'events'\nimport io from 'socket.io-client'\nimport { last, initial } from 'lodash'\nimport request from 'request-promise'\nvar hash = require('object-hash')\nvar once = require('once')\n\n// var log = console.log.bind(console, '[phineas-sdk/Table]')\nvar error = console.error.bind(console, '[phineas-sdk/Table]')\n\nclass Table extends EventEmitter {\n  // endpoints - service endpoints (IPs)\n  constructor ({endpoints, table}) {\n    super()\n    // log(\"endpoints:\", endpoints, \"table\", table)\n\n    this.endpoints = endpoints\n    this.table = table.name\n\n    this.socket\n    this.ws = false // tells whether the websocet connection has been established\n    this.connected = false\n    this.queue = [] // queue to hold subscriptions until connection is made\n    this.subscriptions = {}\n    this.lastEvent = []\n\n    var self = this\n    this.on('ep', function (endpoints) {\n      // log('[event] ep', endpoints)\n      self.endpoints = endpoints\n      self.socket = io(endpoints.phineas)\n\n      self.socket.on('connected', onConnection.bind(self))\n\n      if (self.ws) {\n        self.connected = true\n      }\n    })\n  }\n\n  subscribe (query, ...args) {\n    return subscribe.call(this, query, args)\n  }\n\n  callOnce (query, ...args) {\n    if (!(last(args) instanceof Function)) {\n      console.warn('[WARN] no callback function specified. A function (err, result) { } should be provided ' +\n        'as last argument to callOnce.')\n      args.push(dummyCallback)\n    }\n\n    let subArgs = initial(args)\n    let callback = last(args)\n\n    httpSubscribe\n      .call(this, query, subArgs, callback)\n  }\n}\n\nexport default Table\n\n// web socket on 'connection'\nfunction onConnection (clientId) {\n  // log('connected', clientId)\n  var self = this\n\n  self.ws = true\n  if (self.endpoints && self.endpoints.rp && self.endpoints.phineas) {\n    self.connected = true\n  }\n\n  // drain queue once subscription is made\n  self.queue.forEach(function (params) {\n    let {query, args} = params\n    // log(\"args\", args)\n    self.subscribe(query, ...args)\n  })\n}\n\nfunction subscribe (query, args) {\n  let self = this\n\n  if (!self.table) {\n    error('Table name not specified')\n    return self\n  }\n\n  let callback = last(args)\n  if (!(callback instanceof Function)) {\n    console.warn('[WARN] no callback function specified. A function (err, result) { } should be provided ' +\n      'as last argument to subscribe.')\n    args.push(dummyCallback)\n  }\n\n  callback = last(args) // last arg as callback\n  let subArgs = initial(args) // args to pass to subscription request (all except last)\n  const argsAsString = JSON.stringify(subArgs)\n  // log(`subscribe request. Table: ${self.table} | Query : ${query} | Args: ${subArgs}`)\n\n  const subName = query\n\n  const channel = `${self.table}::${subName}::${argsAsString}`\n\n  if (!self.subscriptions[channel]) {\n    self.subscriptions[channel] = new EventEmitter()\n  }\n\n  if (self.connected) {\n    httpSubscribe.call(self, query, subArgs, callback)\n    wsSubscribe.call(self, query, subArgs)\n  } else {\n    self.queue.push({query, args})\n  }\n\n  return self.subscriptions[channel]\n}\n\n// first data load\nfunction httpSubscribe (query, args, callback) {\n  let options = {\n    method: 'POST',\n    uri: this.endpoints.rp + `/fetch/${query}`,\n    body: {\n      args: args,\n      tableName: this.table\n    },\n    json: true\n  }\n\n  request(options)\n    .then(function (res) {\n      // log('First data load response:', res)\n      callback(null, res)\n    })\n    .catch(function (err) {\n      console.error('Error executing subscribe request', err)\n      callback(err)\n    })\n}\n\n// make sure onUpdate called only once\nconst onUpdateFn = once(onUpdate)\n\n// web-socket subscribe request\nfunction wsSubscribe (query, args) {\n  let self = this\n\n  let reqParams = {\n    subscriptionName: query,\n    args: args,\n    tableName: self.table,\n    clientId: 'test'\n  }\n\n  self.socket.emit('subscribe', reqParams)\n  onUpdateFn.call(self)\n}\n\nfunction onUpdate () {\n  var self = this\n\n  // log('on:update')\n  self.socket.on('db:update', function (msg) {\n    // log('db:update', msg.channel)\n    var channel = msg.channel\n    var event = JSON.parse(msg.notification)\n\n    if (self.lastEvent[channel] === hash(event)) {\n      return\n    }\n\n    self.lastEvent[channel] = hash(event)\n    if (self.subscriptions[channel]) {\n      self.subscriptions[channel].emit(event.eventType, event)\n    }\n  })\n}\n\nfunction dummyCallback (err, data) {\n  if (err) throw err\n}\n"],"sourceRoot":"/source/"}